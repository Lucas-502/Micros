.include "m328pdef.inc"

; Bits
.equ BIT_A  = 0
.equ BIT_B  = 1
.equ BIT_C  = 2
.equ BIT_D  = 3
.equ BIT_E  = 4
.equ BIT_F  = 5
.equ BIT_G  = 6
.equ BIT_DP = 7

;Segmentos del Display
.equ SEG_A  = (1<<BIT_A)
.equ SEG_B  = (1<<BIT_B)
.equ SEG_C  = (1<<BIT_C)
.equ SEG_D  = (1<<BIT_D)
.equ SEG_E  = (1<<BIT_E)
.equ SEG_F  = (1<<BIT_F)
.equ SEG_G  = (1<<BIT_G)
.equ SEG_DP = (1<<BIT_DP)

; Digitos 0 al 9 para catodo comun
.equ DIG0 = SEG_A|SEG_B|SEG_C|SEG_D|SEG_E|SEG_F
.equ DIG1 = SEG_B|SEG_C
.equ DIG2 = SEG_A|SEG_B|SEG_D|SEG_E|SEG_G
.equ DIG3 = SEG_A|SEG_B|SEG_C|SEG_D|SEG_G
.equ DIG4 = SEG_B|SEG_C|SEG_F|SEG_G
.equ DIG5 = SEG_A|SEG_C|SEG_D|SEG_F|SEG_G
.equ DIG6 = SEG_A|SEG_C|SEG_D|SEG_E|SEG_F|SEG_G
.equ DIG7 = SEG_A|SEG_B|SEG_C
.equ DIG8 = SEG_A|SEG_B|SEG_C|SEG_D|SEG_E|SEG_F|SEG_G
.equ DIG9 = SEG_A|SEG_B|SEG_C|SEG_D|SEG_F|SEG_G

; Constantes

.equ T1_PRE_1S      = 3036
.equ BTN_INICIO_BIT = 0        ; PB0
.equ BTN_PARO_BIT   = 1        ; PB1
.equ MASC_BTN     = (1<<BTN_INICIO_BIT)|(1<<BTN_PARO_BIT)


; Base de la LUT en SRAM (como pide el profe: cargado con ST Y+)
.equ LUT_BASE_BAJA   = LOW(0x0100)
.equ LUT_BASE_ALTA   = HIGH(0x0100)

;RAM - variables
.dseg
.org 0x0110                ; dejamos 0x0100.. para la LUT (0x0100..0x0109)
estado:     .byte 1        ; 0=parado, 1=andando
contador:   .byte 1        ; 0 - 9
prev_pb:    .byte 1        ; estado previo de PB1:0 (para flancos)

;Código
.cseg
.org 0x0000
rjmp RESET

; Vector Timer1 OVF
.org 0x001A
rjmp ISR_T1_OVF

RESET:
    ; Stack Pointer
    ldi  r16, high(RAMEND)
    out  SPH, r16
    ldi  r16, low(RAMEND)
    out  SPL, r16

    clr  r1

    rcall CONFIGURAR
    rcall CARGAR_LUT

    ; Estado inicial
    ldi  r16, 0
    sts  estado, r16
    sts  contador, r16

    ; Timer1 prescaler 256, OVF cada 1s
    ldi  r16, 0
    sts  TCCR1A, r16
    ldi  r16, (1<<CS12)        
    sts  TCCR1B, r16

    ; Precarga 3036
    ldi  r16, high(T1_PRE_1S)
    sts  TCNT1H, r16
    ldi  r16, low(T1_PRE_1S)
    sts  TCNT1L, r16

    ; Habilitar interrupción OVF
    ldi  r16, (1<<TOIE1)
    sts  TIMSK1, r16
    sei

BUCLE_PRINCIPAL:
    rcall LEER_BOTONES
    rcall MOSTRAR_CONTADOR
    rjmp BUCLE_PRINCIPAL


CONFIGURAR:
    ldi  r16, 0xFF
    out  DDRD, r16
    ldi  r16, 0x00
    out  PORTD, r16

    ldi  r16, 0x00
    out  DDRB, r16
    ldi  r16, MASC_BTN
    out  PORTB, r16

    in   r16, PINB
    andi r16, MASC_BTN
    sts  prev_pb, r16
    ret

; LUT en (0x0100)
CARGAR_LUT:
    ldi  r28, LUT_BASE_BAJA
    ldi  r29, LUT_BASE_ALTA

    ldi  r20, DIG0  ; 0
    st   Y+,  r20
    ldi  r20, DIG1  ; 1
    st   Y+,  r20
    ldi  r20, DIG2  ; 2
    st   Y+,  r20
    ldi  r20, DIG3  ; 3
    st   Y+,  r20
    ldi  r20, DIG4  ; 4
    st   Y+,  r20
    ldi  r20, DIG5  ; 5
    st   Y+,  r20
    ldi  r20, DIG6  ; 6
    st   Y+,  r20
    ldi  r20, DIG7  ; 7
    st   Y+,  r20
    ldi  r20, DIG8  ; 8
    st   Y+,  r20
    ldi  r20, DIG9  ; 9
    st   Y+,  r20
    ret

