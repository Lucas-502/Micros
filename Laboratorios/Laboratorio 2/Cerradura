#ifndef F_CPU
#define F_CPU 16000000UL
#endif
#include <avr/io.h>
#include <util/delay.h>
#include <stdint.h>
#include <xc.h>

#include <util/twi.h>
#include "twi_lcd.h"

//Puertos_________________________

const uint8_t F4      = (1 << PD2);//Fila4
const uint8_t F3      = (1 << PD3);
const uint8_t F2      = (1 << PD4);
const uint8_t F1      = (1 << PD5);//Fila1
const uint8_t C1      = (1 << PD6);//columna1
const uint8_t C2      = (1 << PD7);
const uint8_t C3      = (1 << PB0);
const uint8_t C4      = (1 << PB1);//Columna4

const uint8_t Buzzer  = (1 << PB2);
const uint8_t Red     = (1 << PB3);//Indicador de Incorrecto
const uint8_t Green   = (1 << PB4);//Indicador de Correcto

const uint8_t sda     = (1 << PC4);//I2C  
const uint8_t scl     = (1 << PC5);

//Teclado 4x4
static void Teclado(void){
	DDRD |= F4|F3|F2|F1|C1|C2|C3|C4;
	PORTD &= ~(F4|F3|F2|F1|C1|C2|C3|C4);

	tecla = [cols][fils]	//array de 0 a 16 (cero ninguna tecla presionada y el resto cualquiera de las 16 teclas de la matriz)
	[1,2,3,4];
	[5,6,7,8];
	[9,10,11,12];
	[13,14,15,16];
	
	//Multiplexeo	
	for (uint8_t i = 0; i < 4; i++){
		for (uint8_t j = 0; j < 4; i++){
			
		}
	}
}



//LCD I2C

static void LCD(void){
	twi_lcd_cmd(0x80);
	twi_lcd_msg("Que Labure ");
	//--- Select 2nd Row
	twi_lcd_cmd(0xC0);
	//--- Send a String to LCD
	twi_lcd_msg("Gololo");


}

//Indicadores (leds y buzzer)
static void Indicadores(void){


}


int main(void){
	twi_init();
	twi_lcd_init();
	twi_lcd_cmd(0x80);
	twi_lcd_cmd(0xC0);
	
	twi_lcd_clear();
	LCD(modo);
	
	_delay_ms(2000);  //Para ver si limpiaba la pantalla
	twi_lcd_cmd(0x01);

	Teclado();
	LCD();
	Indicadores();
	
    while(1){
		
		
		
		 
    }
}
