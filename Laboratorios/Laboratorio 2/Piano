#define F_CPU 16000000UL
#include <avr/io.h>
#include <util/delay.h>
#include <stdint.h>
#include <stdbool.h>

/* ---------------- Entradas ---------------- */
static inline void io_init(void){
  // Botones A0 y A1 (pull-down externo)
  DDRC &= ~((1<<PC0)|(1<<PC1));
  PORTC &= ~((1<<PC0)|(1<<PC1));

  // DIP D2..D7 y D8 (activo-alto, sin pull-up)
  DDRD  &= ~((1<<PD2)|(1<<PD3)|(1<<PD4)|(1<<PD5)|(1<<PD6)|(1<<PD7));
  PORTD &= ~((1<<PD2)|(1<<PD3)|(1<<PD4)|(1<<PD5)|(1<<PD6)|(1<<PD7));
  DDRB  &= ~(1<<PB0);
  PORTB &= ~(1<<PB0);
}

static inline bool botonA0_flanco(void){
  static uint8_t st=0; uint8_t now=(PINC&(1<<PC0))?1:0;
  if(now!=st){ _delay_ms(25); now=(PINC&(1<<PC0))?1:0; if(now!=st){ st=now; if(st) return true; } }
  return false;
}
static inline bool botonA1_flanco(void){
  static uint8_t st=0; uint8_t now=(PINC&(1<<PC1))?1:0;
  if(now!=st){ _delay_ms(25); now=(PINC&(1<<PC1))?1:0; if(now!=st){ st=now; if(st) return true; } }
  return false;
}

/* DIP piano: 0..6=C..B o 0xFF si ninguna */
static inline uint8_t piano_key(void){
  if(PIND&(1<<PD2)) return 0; // C
  if(PIND&(1<<PD3)) return 1; // D
  if(PIND&(1<<PD4)) return 2; // E
  if(PIND&(1<<PD5)) return 3; // F
  if(PIND&(1<<PD6)) return 4; // G
  if(PIND&(1<<PD7)) return 5; // A
  if(PINB&(1<<PB0)) return 6; // B
  return 0xFF;
}

/*  PWM NES en D9 */
#define NES_DUTY_NUM 1
#define NES_DUTY_DEN 8
static inline void pwm_start_icr(uint16_t icr){
  DDRB  |= (1<<PB1);
  TCCR1A = (1<<COM1A1) | (1<<WGM11);
  TCCR1B = (1<<WGM13)|(1<<WGM12) | (1<<CS11);
  ICR1   = icr;
  OCR1A  = (uint16_t)((icr * NES_DUTY_NUM)/NES_DUTY_DEN);
}
static inline void pwm_set_icr(uint16_t icr){
  if(icr==0){ TCCR1A &= ~(1<<COM1A1); return; }
  if(!(TCCR1B & (1<<CS11))) pwm_start_icr(icr);
  ICR1  = icr;
  OCR1A = (uint16_t)((icr * NES_DUTY_NUM)/NES_DUTY_DEN);
  TCCR1A |= (1<<COM1A1);
}
static inline void pwm_stop(void){ TCCR1A &= ~(1<<COM1A1); TCCR1B=0; }

/*  ICR precisa C4 a E6 */
enum Note { REST=0, C4,D4,E4,F4,G4,A4,B4,  C5,D5,E5,F5,G5,A5,B5,  C6,D6,E6 };
static const uint16_t ICR_TAB[] = {
/* REST */ 0,
/* C4..B4 */ 7644, 6811, 6067, 5727, 5102, 4546, 4050,
/* C5..B5 */ 3822, 3405, 3034, 2863, 2551, 2273, 2025,
/* C6..E6 */ 1910, 1702, 1516
};
